import { FC, useMemo, useState } from "react";
import InsightConsiderDrawer from "./InsightConsiderDrawer";

interface InsightDrawer {
  open: boolean;
  type: "un_employed" | "job_hopper" | "first_jobber" | null;
}

interface Props {
  hideDrawer?: boolean;
  alert?: {
    first_jobber: boolean;
    job_hopper: boolean;
    unemployed: boolean;
    word_counting: boolean;
  };
}

const AlertContainer: FC<Props> = ({
  hideDrawer = false,
  alert,
}): JSX.Element => {
  const [insightDrawer, setInsightDrawer] = useState<InsightDrawer>({
    open: false,
    type: null,
  });

  const handleInsightDrawer = (data: InsightDrawer) => {
    setInsightDrawer(data);
  };

  const handleInsightDrawerClose = () => {
    setInsightDrawer({ open: false, type: null });
  };

  const isAlert = useMemo(() => {
    if (!alert) return false;

    const mapNewData = {
      ...alert,
      word_counting: false,
    };

    const checkAlert = Object.keys(mapNewData).map((key) => {
      return mapNewData[key as keyof typeof mapNewData];
    });

    if (
      checkAlert.every((item) => {
        return item === false;
      })
    ) {
      return false;
    }

    return true;
  }, [alert]);

  if (!isAlert) return <></>;

  return (
    <div className="flex gap-2">
      <div className="w-[20px] h-[20px] bg-[#FAAD14] rounded-full"></div>

      {/* First Jobber */}
      {alert?.first_jobber && (
        <button
          className="cursor-pointer"
          type="button"
          onClick={() =>
            handleInsightDrawer({ open: true, type: "first_jobber" })
          }
        >
          <svg
            width="24"
            height="24"
            viewBox="0 0 24 24"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
          >
            <g clipPath="url(#clip0_7525_83578)">
              <mask
                id="mask0_7525_83578"
                maskContentUnits="objectBoundingBox"
                maskUnits="userSpaceOnUse"
                x="0"
                y="0"
                width="24"
                height="24"
              >
                <rect width="24" height="24" fill="#D9D9D9" />
              </mask>
              <g mask="url(#mask0_7525_83578)">
                <path
                  fillRule="evenodd"
                  clipRule="evenodd"
                  d="M12.0215 4.5C12.1928 4.50002 12.3617 4.51864 12.5273 4.55566C12.7035 4.59504 12.8714 4.66034 13.0312 4.74805L13.0322 4.74707L20.7539 8.93359L20.7617 8.9375L20.7695 8.94238C20.9751 9.06387 21.1478 9.22783 21.2686 9.4375L21.3457 9.59277C21.4112 9.7511 21.4443 9.91933 21.4443 10.0938V15.4941C21.4443 15.7282 21.3711 15.9477 21.2227 16.1289L21.1543 16.2041C20.96 16.3984 20.7112 16.4941 20.4434 16.4941C20.2092 16.4941 19.9899 16.4206 19.8086 16.2715L19.7334 16.2031C19.5398 16.0088 19.4444 15.7611 19.4443 15.4941V11.0029L18.5215 11.4941V15.0713C18.5214 15.417 18.4459 15.7433 18.292 16.042L18.2217 16.1689C18.0256 16.4918 17.7587 16.749 17.4287 16.9355L17.4209 16.9395L13.0361 19.3125L13.0352 19.3115C12.874 19.4019 12.705 19.47 12.5273 19.5098C12.3617 19.5468 12.1928 19.5654 12.0215 19.5654C11.8502 19.5654 11.6812 19.5468 11.5156 19.5098C11.3375 19.47 11.1674 19.4022 11.0059 19.3115L6.62207 16.9395L6.61328 16.9355C6.3244 16.7722 6.08438 16.5544 5.89746 16.2861L5.82129 16.1689C5.61942 15.8368 5.52153 15.4664 5.52148 15.0713V11.4873L4.18652 10.749L4.17871 10.7441L4.17188 10.7402C3.97214 10.6202 3.79707 10.4624 3.67578 10.2588C3.55712 10.0594 3.50006 9.83904 3.5 9.60938L3.51074 9.43848C3.53244 9.27004 3.58734 9.10866 3.67676 8.95898C3.7981 8.75588 3.97244 8.59841 4.17188 8.47852L4.18945 8.46875L11.0098 4.74902C11.1697 4.66041 11.3388 4.59519 11.5156 4.55566C11.6813 4.51867 11.8502 4.5 12.0215 4.5ZM13.0439 14.4854L13.043 14.4834C12.8815 14.5741 12.712 14.6417 12.5342 14.6816L12.5352 14.6826C12.3685 14.7201 12.1966 14.7383 12.0215 14.7383C11.934 14.7383 11.8472 14.7338 11.7617 14.7246L11.5078 14.6826C11.3299 14.6426 11.1605 14.5742 10.999 14.4834V14.4854L7.52148 12.5859V15.0771C7.52154 15.1041 7.52716 15.1311 7.54199 15.1631L7.54492 15.168C7.54808 15.1714 7.5562 15.1787 7.57129 15.1885L12.0088 17.5869L12.0195 17.5928H12.0225L12.0332 17.5869L16.4717 15.1875C16.5165 15.1587 16.5198 15.1458 16.5137 15.1572C16.5081 15.1677 16.5214 15.1501 16.5215 15.0771V12.5859L13.0439 14.4854ZM12.0283 6.48438L6.24023 9.61035L12.0293 12.7549H12.0322L17.8047 9.61035L12.0332 6.4834L12.0312 6.48242L12.0283 6.48438Z"
                  fill="#8C8C8C"
                />
              </g>
            </g>
            <defs>
              <clipPath id="clip0_7525_83578">
                <rect width="24" height="24" fill="white" />
              </clipPath>
            </defs>
          </svg>
        </button>
      )}

      {/* Job hopper */}
      {alert?.job_hopper && (
        <button
          className="cursor-pointer"
          type="button"
          onClick={() =>
            handleInsightDrawer({ open: true, type: "job_hopper" })
          }
        >
          <svg
            width="24"
            height="24"
            viewBox="0 0 24 24"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
          >
            <g clipPath="url(#clip0_7525_83658)">
              <mask
                id="mask0_7525_83658"
                style={{ maskType: "alpha" }}
                maskUnits="userSpaceOnUse"
                x="0"
                y="0"
                width="24"
                height="24"
              >
                <rect width="24" height="24" fill="#D9D9D9" />
              </mask>
              <g mask="url(#mask0_7525_83658)">
                <path
                  d="M20.8242 14.0059C21.1266 14.0335 21.3997 14.1576 21.6211 14.3789L21.71 14.4766C21.9037 14.7124 22 14.997 22 15.3076V18.5C22 18.7355 21.9255 18.952 21.7773 19.1318L21.709 19.207C21.5166 19.3989 21.2693 19.5 20.999 19.5C20.763 19.4999 20.5435 19.4232 20.3633 19.2744L20.2891 19.2061C20.0958 19.0121 20 18.7676 20 18.5V17.9453C19.325 18.7957 18.5458 19.5398 17.6572 20.1719L17.1777 20.4961C15.6127 21.4984 13.8825 22 12 22C10.026 22 8.22189 21.4749 6.59961 20.4258L6.5957 20.4238L6.28125 20.2129L6.27734 20.21C4.68151 19.0926 3.51725 17.6376 2.79004 15.8555L2.65039 15.4951L2.64941 15.4932L2.64453 15.4795L2.64062 15.4688C2.56915 15.2333 2.56441 14.9868 2.64258 14.7471L2.64648 14.7344L2.67578 14.6582L2.67871 14.6514L2.68164 14.6436L2.72754 14.5576C2.84249 14.3643 3.02084 14.2292 3.23633 14.1592L3.24902 14.1543L3.3291 14.1338L3.34277 14.1299C3.59933 14.077 3.84996 14.1333 4.06445 14.2773L4.14258 14.335C4.31488 14.4722 4.4389 14.6506 4.51465 14.8574L4.63281 15.1504L4.74902 15.4121C5.34838 16.708 6.24273 17.7657 7.43945 18.5918L7.69727 18.7627C8.98989 19.5872 10.4206 20 12 20C13.5778 20 15.0054 19.5632 16.2959 18.6875L16.7334 18.374C17.6101 17.7092 18.3525 16.9172 18.9668 16H18C17.7645 16 17.548 15.9255 17.3682 15.7773L17.293 15.709C17.1011 15.5166 17 15.2693 17 14.999C17.0001 14.7294 17.1007 14.4817 17.2939 14.2891L17.3682 14.2207C17.5487 14.0728 17.7657 14 18 14H20.6924L20.8242 14.0059Z"
                  fill="#8C8C8C"
                />
                <path
                  d="M12 2C14.106 2 16.0206 2.59767 17.7305 3.79004L18.0264 4.00391C19.3804 5.01814 20.4036 6.28988 21.0889 7.81445L21.2305 8.14453L21.2324 8.14941L21.3682 8.50098L21.3701 8.50684L21.375 8.52051L21.3809 8.53516L21.3838 8.55078L21.416 8.69727L21.418 8.70605L21.4189 8.71484C21.4394 8.85522 21.4351 8.99676 21.4023 9.13574L21.3604 9.27344C21.2694 9.51597 21.0965 9.69945 20.8643 9.80273L20.8525 9.80762L20.7637 9.8418C20.5098 9.92403 20.2554 9.89734 20.0303 9.77832L19.9355 9.72266C19.717 9.57587 19.5633 9.36929 19.4775 9.12402C18.9245 7.67809 18.038 6.50215 16.8135 5.58984L16.5557 5.40527C15.1968 4.46856 13.6825 4 12 4C10.5207 4 9.17332 4.3837 7.94727 5.15332L7.7041 5.3125C6.63526 6.03785 5.74718 6.93394 5.0332 8H6C6.23545 8 6.45201 8.07453 6.63184 8.22266L6.70703 8.29102L6.77441 8.36621C6.92228 8.54606 7 8.76449 7 9.00098L6.99512 9.10156C6.97629 9.29924 6.90184 9.48235 6.77441 9.63672L6.70605 9.71094C6.51211 9.90418 6.26761 10 6 10H3.30762C2.99702 9.99997 2.71241 9.90372 2.47656 9.70996L2.37891 9.62109C2.15755 9.39974 2.03349 9.12664 2.00586 8.82422L2 8.69238V5.5C2 5.23073 2.0975 4.98616 2.29102 4.79297L2.36621 4.72559C2.54606 4.57772 2.76449 4.5 3.00098 4.5L3.10156 4.50488C3.3321 4.52684 3.54249 4.62496 3.71094 4.79395L3.7793 4.86816C3.92715 5.04867 4 5.26574 4 5.5V6.05273C4.79378 5.05309 5.73339 4.20135 6.82227 3.50391L7.11719 3.32227C8.60385 2.44107 10.235 2 12 2Z"
                  fill="#8C8C8C"
                />
                <mask
                  id="mask1_7525_83658"
                  style={{ maskType: "alpha" }}
                  maskUnits="userSpaceOnUse"
                  x="7"
                  y="7"
                  width="10"
                  height="10"
                >
                  <rect x="7" y="7" width="10" height="10" fill="#D9D9D9" />
                </mask>
                <g mask="url(#mask1_7525_83658)">
                  <path
                    fillRule="evenodd"
                    clipRule="evenodd"
                    d="M12.832 7.58203C13.1279 7.58203 13.388 7.69089 13.5977 7.90039C13.807 8.1099 13.9149 8.36943 13.915 8.66504V9.24902H15.332C15.6279 9.24902 15.888 9.3569 16.0977 9.56641C16.3073 9.77605 16.415 10.0361 16.415 10.332V14.915C16.415 15.211 16.3073 15.471 16.0977 15.6807C15.888 15.8903 15.628 15.999 15.332 15.999H8.66504C8.36941 15.9989 8.1099 15.8901 7.90039 15.6807C7.69089 15.471 7.58203 15.2109 7.58203 14.915V10.332C7.58209 10.0362 7.69078 9.77604 7.90039 9.56641C8.10987 9.35708 8.36948 9.24919 8.66504 9.24902H10.082V8.66504C10.0822 8.36931 10.1909 8.10995 10.4004 7.90039C10.6099 7.69085 10.8693 7.5822 11.165 7.58203H12.832ZM8.91504 14.665H15.082V13.499H13.499V13.665C13.499 13.846 13.4346 14.0096 13.3057 14.1387C13.1766 14.2677 13.013 14.332 12.832 14.332H11.165C10.9843 14.3319 10.8203 14.2676 10.6914 14.1387C10.5628 14.0097 10.499 13.8458 10.499 13.665V13.499H8.91504V14.665ZM11.832 12.999H12.165V12.665H11.832V12.999ZM8.91504 12.165H10.499V11.999C10.4991 11.8183 10.5627 11.6543 10.6914 11.5254C10.8203 11.3965 10.9843 11.3322 11.165 11.332H12.832C13.0129 11.332 13.1767 11.3965 13.3057 11.5254C13.4346 11.6544 13.499 11.8182 13.499 11.999V12.165H15.082V10.582H8.91504V12.165ZM11.415 9.24902H12.582V8.91504H11.415V9.24902Z"
                    fill="#8C8C8C"
                  />
                </g>
              </g>
            </g>
            <defs>
              <clipPath id="clip0_7525_83658">
                <rect width="24" height="24" fill="white" />
              </clipPath>
            </defs>
          </svg>
        </button>
      )}

      {/* unemployed */}
      {alert?.unemployed && (
        <button
          className="cursor-pointer"
          type="button"
          onClick={() =>
            handleInsightDrawer({ open: true, type: "un_employed" })
          }
        >
          <svg
            width="24"
            height="24"
            viewBox="0 0 24 24"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
          >
            <mask
              id="mask0_7525_83670"
              style={{ maskType: "alpha" }}
              maskUnits="userSpaceOnUse"
              x="0"
              y="0"
              width="24"
              height="24"
            >
              <rect width="24" height="24" fill="#D9D9D9" />
            </mask>
            <g mask="url(#mask0_7525_83670)">
              <path
                fillRule="evenodd"
                clipRule="evenodd"
                d="M8.5 2C9.73357 2 10.8023 2.44487 11.6787 3.32129L11.8379 3.48828C12.6088 4.33232 13 5.34361 13 6.5C13 7.73357 12.5551 8.80229 11.6787 9.67871L11.6709 9.6875L11.6699 9.68652L11.5205 9.8291L11.5137 9.83691C11.3635 9.97421 11.2054 10.0977 11.0439 10.2109C11.0869 10.3354 11.1271 10.458 11.1621 10.5742L11.3447 11.2207L11.4199 11.5H12.752L14.1602 9.13379C14.2959 8.90237 14.5099 8.75061 14.7705 8.69531C15.0297 8.64052 15.2799 8.69153 15.498 8.81738C15.7161 8.94334 15.8851 9.13421 15.9668 9.38672L15.9932 9.4834C16.0414 9.70796 16.0068 9.93495 15.8887 10.1396L15.8848 10.1455L15.0791 11.5H16.5L16.499 9.32129C16.499 9.05003 16.6096 8.80864 16.8096 8.62891C17.0067 8.45183 17.248 8.37109 17.5 8.37109C17.752 8.3711 17.9944 8.45192 18.1914 8.62988L18.2617 8.7002C18.4157 8.87058 18.499 9.08494 18.499 9.32129L18.5 11.5H19.5V8.32715C19.5 8.05599 19.6098 7.81448 19.8096 7.63477C20.0067 7.45764 20.249 7.37695 20.501 7.37695C20.7528 7.37701 20.9944 7.45784 21.1914 7.63574L21.2627 7.70605C21.4167 7.87644 21.5 8.09079 21.5 8.32715V11.6738C21.642 11.7358 21.7769 11.8149 21.9033 11.9121L22.0361 12.0244C22.3282 12.2973 22.5 12.6482 22.5 13.0635V20.9365C22.5 21.3518 22.3282 21.7027 22.0361 21.9756L21.9033 22.0879C21.5816 22.3353 21.2052 22.4655 20.7949 22.4941L20.6172 22.5H10.3652L10.2227 22.4951L10.2148 22.4941H10.2061C9.84539 22.4691 9.51196 22.3652 9.21973 22.1748L9.09668 22.0879C8.72481 21.8018 8.5 21.4112 8.5 20.9365V18.9346L8.36426 18.9648L8.3457 18.9688L8.19238 18.9971L8.17383 19C7.33859 19.1183 6.50405 18.8103 5.95312 18.1846L5.84668 18.0557L5.83398 18.0381L5.74512 17.9111L5.73535 17.8975L5.16602 17.0215L5.1416 16.9775L5.10449 16.9062C5.09671 16.8911 5.08922 16.8752 5.08301 16.8594C4.92952 16.4665 5.07073 16.0102 5.43262 15.7725L5.57324 15.6973C5.863 15.5729 6.19504 15.6095 6.44824 15.7881L6.56836 15.8887L6.59961 15.9248L6.65137 15.9873L6.68359 16.0312L7.24316 16.8936L7.2832 16.9512L7.34375 17.0205C7.49344 17.1687 7.70823 17.2426 7.92773 17.2129L8 17.1992L13.0918 16.0781L13.1318 16.0605C13.1658 16.0374 13.1855 15.9974 13.1826 15.96L13.1797 15.9443C13.1713 15.9097 13.1433 15.8818 13.1055 15.875L13.0635 15.876L9.55762 16.6484C9.55163 16.6498 9.54509 16.6512 9.53906 16.6523L9.38281 16.6807C9.37648 16.6818 9.36965 16.6827 9.36328 16.6836C8.51541 16.8025 7.67 16.4822 7.12109 15.8389L7.01562 15.7061C7.01165 15.7007 7.00766 15.695 7.00391 15.6895L6.91602 15.5605L6.90527 15.5439L5.69336 13.6035C5.68448 13.5893 5.67539 13.5746 5.66797 13.5596L5.63281 13.4863L5.6123 13.4385C5.46639 13.0428 5.61556 12.5912 5.98047 12.3604L6.12207 12.2871C6.41331 12.1677 6.74533 12.2091 6.99609 12.3926L7.11426 12.4961L7.14941 12.5371L7.19824 12.6006L7.22559 12.6406L8.42871 14.5645L8.47461 14.6309C8.55083 14.7315 8.65346 14.8059 8.76855 14.8516C8.66556 14.8101 8.57296 14.7451 8.5 14.6592V13.0635C8.5 12.5888 8.72481 12.1982 9.09668 11.9121L9.2832 11.7852C9.32255 11.7617 9.36348 11.7413 9.4043 11.7207L9.24707 11.1514C9.22567 11.0803 9.20247 11.013 9.18164 10.9492C8.95985 10.9815 8.73282 11 8.5 11C7.34577 11 6.33333 10.6102 5.4873 9.83691L5.47852 9.8291L5.33008 9.68652L5.32129 9.67871C4.93262 9.29004 4.62772 8.86028 4.4082 8.3916C4.34154 8.44473 4.29202 8.49517 4.25391 8.54199L4.17773 8.65332C4.05107 8.88295 4.00001 9.22653 4 10V21.5C4 22.0523 3.55228 22.5 3 22.5C2.44772 22.5 2 22.0523 2 21.5V10C2 9.27126 2.01932 8.4273 2.42676 7.68848L2.50195 7.55957C2.8414 7.01492 3.34895 6.61937 4.00391 6.31641C4.04334 5.23761 4.43176 4.2872 5.16406 3.48633L5.16992 3.48047L5.31152 3.33105L5.32129 3.32129L5.48828 3.16211C6.33232 2.3912 7.34361 2 8.5 2ZM10.6475 14.5615L9.21484 14.8779L12.6855 14.1133L12.8789 14.0811C13.7775 13.9763 14.627 14.5192 14.8994 15.3818L14.9492 15.5713L14.9531 15.5947L14.9756 15.7363L14.9795 15.7627L14.9893 15.9424C14.9955 16.7751 14.453 17.5327 13.6465 17.792L13.4697 17.8398L10.6475 18.4609V20.6172H20.3525V13.3828H10.6475V14.5615ZM8.5 4C7.8008 4 7.23949 4.23121 6.73535 4.73535C6.23121 5.23949 6 5.8008 6 6.5C6 7.1992 6.23121 7.76051 6.73535 8.26465L6.92773 8.44141C7.38233 8.82312 7.88842 9 8.5 9C9.1992 9 9.76051 8.76879 10.2646 8.26465L10.4414 8.07227C10.8231 7.61767 11 7.11158 11 6.5C11 5.8008 10.7688 5.23949 10.2646 4.73535C9.76051 4.23121 9.1992 4 8.5 4Z"
                fill="#8C8C8C"
              />
            </g>
          </svg>
        </button>
      )}

      {!hideDrawer && (
        <InsightConsiderDrawer
          open={insightDrawer.open}
          onClose={handleInsightDrawerClose}
          type={insightDrawer.type}
        />
      )}
    </div>
  );
};

export default AlertContainer;
